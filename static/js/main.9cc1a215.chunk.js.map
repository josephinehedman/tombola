{"version":3,"sources":["components/Header.js","pages/About.js","components/Button.js","pages/Activity.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","About","Button","getData","participants","history","useHistory","onClick","push","Activity","activity","isLoading","accessibility","Math","round","returnPercentageAccessibility","error","type","price","Home","App","useState","setIsLoading","setActivity","fetch","process","then","res","json","data","catch","useEffect","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc1a215.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <nav className=\"header__navbar\">\n      <Link to=\"/\">\n        <h1 className=\"navbar__logo\">Tombola</h1>\n      </Link>\n      <ul className=\"nav-list\">\n        <Link to=\"/about\">\n          <li className=\"nav-list__links nav-list__links--left\">\n            About\n          </li>\n        </Link>\n        <Link to=\"/activity\">\n          <li className=\"nav-list__links nav-list__links--right\">\n            Activity\n          </li>\n        </Link>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import './About.css';\n\nconst About = () => (\n  <main className=\"main-content\">\n    <section className=\"main-container--about-page\">\n      <h1 className=\"header__about\">About Tombola</h1>\n      <p className=\"header__about-paragraph\">Inspiration page to find fun activites</p>\n      <article className=\"info-box\">\n        <table className=\"info-table\">\n        <tbody>\n          <tr>\n            <th className=\"th--bold\">\n              What?\n            </th>\n            <th className=\"th--bold\">\n              Description\n            </th>\n          </tr>\n          <tr>\n            <td>\n              Possibility\n            </td>\n            <td>A percentage describing how possible an event is with\n        100% being the most accessible</td>\n          </tr>\n          <tr>\n            <td>\n              Price\n            </td>\n            <td>A factor describing the cost of the event ranging from free to $$$</td>\n          </tr>\n          <tr>\n            <td>\n            Participants\n            </td>\n            <td>The number of people that this activity could involve</td>\n          </tr>\n          <tr>\n            <td>\n            Type\n            </td>\n            <td> Type of activity\n              <i> education, recreational, social, diy, charity,\n              cooking, relaxation, music, busywork</i></td>\n          </tr>\n          </tbody>\n        </table>\n      </article>\n    </section>\n  </main>\n);\n\nexport default About;\n","import { useHistory } from 'react-router-dom';\nimport './Button.css';\n\nconst Button = ({ getData, participants }) => {\n  const history = useHistory();\n\n  return (\n    <button className=\"btn btn-get-activity\"onClick={() => {\n      history.push('/activity');\n      getData(participants || 'random');\n    }}>\n      Get Activity\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from '../components/Button';\nimport './Activity.css';\n\nconst Activity = ({ activity, getData, isLoading }) => {\n  const returnPercentageAccessibility = accessibility => Math.round((1 - accessibility) * 100);\n  const accessibility = returnPercentageAccessibility(activity.accessibility);\n\n  if (isLoading) {\n    return (\n      <main className=\"main-content--activity-page\">\n        <div className=\"loading-card\"> <h1>Loading activity, please wait</h1></div>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"main-content--activity-page\">\n      <h1 className=\"header__activity\">Activity Generator</h1>\n        {activity.error ? <div className=\"error-card\"> <h1>Sorry, Couldn't get your activity. Please try again</h1></div>\n          : <section className=\"activity-card\">\n            <article className=\"activity-card__header\">\n            <h2 className=\"activity-card__heading\">{activity.activity}</h2>\n                <p className=\"card__info__type\">\n                  Type: {activity.type}\n                </p>\n            </article>\n              <article className=\"activity-card__info\">\n                 <div className=\"card__info\">\n                   <p className=\"card__info--circle\">\n                    {accessibility}%\n                   </p>\n                   <p className=\"card__info__text\"> Possibility to do</p>\n                 </div>\n              <div className=\"card__info\">\n                {activity.price === 0 && <p className=\"card__info--circle\">\n                Free</p> }\n               {activity.price > 0 && activity.price <= 0.33 && <p className=\"card__info--circle\">\n                $</p> }\n                {activity.price >= 0.34 && activity.price <= 0.66 && <p className=\"card__info--circle\">\n                $</p> }\n                {activity.price >= 0.64 && <p className=\"card__info--circle\">\n                $$$</p> }\n               <p className=\"card__info__text\"> Price range (free-$$$)</p>\n              </div>\n              <div className=\"card__info\">\n                <p className=\"card__info--circle\">\n                  {activity.participants}\n                </p>\n                <p className=\"card__info__text\"> Participants</p>\n              </div>\n            </article>\n          </section>}\n      <section className=\"input-container\">\n       <Button getData={getData}/>\n      </section>\n    </main>\n  );\n};\n\nexport default Activity;\n","import Button from '../components/Button';\nimport './Home.css';\n\nconst Home = ({ getData }) => (\n  <main className='main-content'>\n    <section className='main-container--home-page'>\n      <h1 className='header__welcome'>Welcome to Tombola!</h1>\n      <p> Ps. It might take a little while to connect to the Bored API </p>\n      <p> The first activity could take some time to load. </p>\n      <Button getData={getData} />\n    </section>\n  </main>\n);\n\nexport default Home;\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport About from './pages/About';\nimport Activity from './pages/Activity';\nimport Home from './pages/Home';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activity, setActivity] = useState('');\n  const path = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : process.env.REACT_APP_HEROKU_PATH;\n\n  const getData = () => {\n    fetch(path)\n      .then(res => res.json())\n      .then(data => setActivity(data))\n      .then(() => setIsLoading(false))\n      .catch(error => setActivity({ error }));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <Router basename='tombola'>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home getData={getData} />\n          </Route>\n          <Route path=\"/about\" exact>\n            <About />\n          </Route>\n          <Route path=\"/activity\" exact>\n            <Activity\n              activity={activity}\n              getData={getData}\n              isLoading={isLoading}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}